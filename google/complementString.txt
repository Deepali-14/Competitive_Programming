Ques-22:
You are given a binary string str. In a single operation, you can choose two indices L and R such that 1 ≤ L ≤ R ≤ N and 
complement the characters between L and R i.e strL, strL+1, , strR. By complement, we mean change character 0 to 1 and 
vice-versa.
You task is to perform ATMOST one operation such that in final string number of 1s is maximised. If there is no need to 
completement, i.e., string contains all 1s, return -1. Else, return the two values denoting L and R. If there are multiple 
solutions, return the lexicographically smallest pair of L and R.


Ans-22:   
    public:
    vector<int> findRange(string str, int n) 
    {
        int l=0, lmax=-1, rmax=-1, cur=0, max=0, i;
        for(i=0; i<n; i++)
        {
            if(str[i]=='0')
                cur++;
            else
                cur--;
            if(cur>max)
            {
                max=cur;
                lmax=l;
                rmax=i;
            }
            if(cur<0)
            {
                cur=0;
                l=i+1;
            }
        }
        vector<int> v;
        if(lmax==-1 && rmax==-1)
            return {-1};
        else
            return {lmax+1, rmax+1};
    }